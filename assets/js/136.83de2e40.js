(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{620:function(t,r,s){"use strict";s.r(r);var o=s(11),e=Object(o.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_5-字符串和正则表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串和正则表达式"}},[t._v("#")]),t._v(" 5. 字符串和正则表达式")]),t._v(" "),r("ol",[r("li",[t._v("str+=\"one\"+\"two\";这句代码在内存中创建了一个临时字符串。\n以下代码用两行语句直接附加内容给str,从而避免了产生临时字符串。在大多数浏览器中这样做会提速10%~40%：str+='one';str+='two';也可以str=str+'one'+'two';")]),t._v(" "),r("li",[t._v("在多数情况下，使用concat比使用简单的+和+=稍慢，尤其是在IE、Opera和Chrome中慢的更明显。")]),t._v(" "),r("li",[t._v("两个正则表达式匹配相同的文本并不意味着它们有着同样的速度。")]),t._v(" "),r("li",[t._v("当一个特性的字元匹配失败时，正则表达式会试着回溯到之前尝试匹配的位置上，然后尝试其他可能的路径。")]),t._v(" "),r("li",[t._v("把内部组改成非捕获组---把(\\s+\\S+)改为(?:\\s+\\S+)会对性能有所帮助。在Opera、IE、Chrome中能减少20%~45%的时间，而Safari和Firefox中也有轻微的改善。")])])])}),[],!1,null,null,null);r.default=e.exports}}]);